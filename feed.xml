

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title></title>
  <subtitle></subtitle>
  <updated>2023-11-03T22:12:16+01:00</updated>
  <author>
    <name>Hassan BOLAJRAF</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Hassan BOLAJRAF </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Docker | Tips and Tricks</title>
    <link href="http://localhost:4000/posts/Docker-Tips-and-Tricks/" rel="alternate" type="text/html" title="Docker | Tips and Tricks" />
    <published>2023-10-26T00:00:00+02:00</published>
  
    <updated>2023-10-26T00:00:00+02:00</updated>
  
    <id>http://localhost:4000/posts/Docker-Tips-and-Tricks/</id>
    <content src="http://localhost:4000/posts/Docker-Tips-and-Tricks/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Docker" />
    
    <category term="Tips And Tricks" />
    
  

  
    <summary>
      





      Docker is a powerful tool for containerization, allowing you to package and run applications with their dependencies in isolated containers. Here are some tips and tricks for using Docker effectively.

Installation and Setup

1. Install Docker

  To get started, install Docker by following the official installation instructions for your operating system on the Docker website.


2. Use Docker Co...
    </summary>
  

  </entry>

  
  <entry>
    <title>GitHub | Using Copilot with Visual Studio Code</title>
    <link href="http://localhost:4000/posts/GitHub-Using-Copilot-with-Visual-Studio-Code/" rel="alternate" type="text/html" title="GitHub | Using Copilot with Visual Studio Code" />
    <published>2023-10-15T00:00:00+02:00</published>
  
    <updated>2023-10-15T00:00:00+02:00</updated>
  
    <id>http://localhost:4000/posts/GitHub-Using-Copilot-with-Visual-Studio-Code/</id>
    <content src="http://localhost:4000/posts/GitHub-Using-Copilot-with-Visual-Studio-Code/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="GitHub" />
    
    <category term="Copilot" />
    
  

  
    <summary>
      





      Using GitHub Copilot with Visual Studio Code
GitHub Copilot is an AI-powered pair programmer developed by GitHub and OpenAI. It helps developers write code faster by providing suggestions and auto-completions. In this guide, we’ll explore how to set up GitHub Copilot with Visual Studio Code and provide some examples of how to use it effectively.

Prerequisites
Before you start, ensure you have ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Azure | Build .Net IoT App using C#</title>
    <link href="http://localhost:4000/posts/Azure-Build-.Net-IoT-App-using-C/" rel="alternate" type="text/html" title="Azure | Build .Net IoT App using C#" />
    <published>2023-10-04T00:00:00+02:00</published>
  
    <updated>2023-10-04T00:00:00+02:00</updated>
  
    <id>http://localhost:4000/posts/Azure-Build-.Net-IoT-App-using-C/</id>
    <content src="http://localhost:4000/posts/Azure-Build-.Net-IoT-App-using-C/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="IoT" />
    
  

  
    <summary>
      





      Build .Net IoT App using C#
Azure IoT provides a robust platform for building Internet of Things (IoT) solutions. Here are some C# examples to help you get started with Azure IoT services.

Azure IoT Hub
Azure IoT Hub is a fully managed service that enables reliable and secure communication between IoT devices and the cloud. Here’s how to interact with it using C#:

Send Telemetry Data

using M...
    </summary>
  

  </entry>

  
  <entry>
    <title>Git | Tips and Tricks</title>
    <link href="http://localhost:4000/posts/Git-Tips-and-Tricks/" rel="alternate" type="text/html" title="Git | Tips and Tricks" />
    <published>2023-10-01T00:00:00+02:00</published>
  
    <updated>2023-10-28T22:06:54+02:00</updated>
  
    <id>http://localhost:4000/posts/Git-Tips-and-Tricks/</id>
    <content src="http://localhost:4000/posts/Git-Tips-and-Tricks/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="GitHub" />
    
    <category term="Git" />
    
  

  
    <summary>
      





      Git Tips and Tricks

Git is a powerful version control system that can make your development workflow more efficient. Here are some tips and tricks to help you get the most out of Git.

Configure Git
Before you start using Git, it’s a good idea to configure it with your name and email address. This information will be associated with your commits.

git config --global user.name "hbolajraf"
git ...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# | Configure QoS within API Gateway using ocelot and Polly</title>
    <link href="http://localhost:4000/posts/Configure-QoS-within-API-Gateway-using-ocelot-and-Polly/" rel="alternate" type="text/html" title="C# | Configure QoS within API Gateway using ocelot and Polly" />
    <published>2023-09-27T00:00:00+02:00</published>
  
    <updated>2023-10-22T14:28:59+02:00</updated>
  
    <id>http://localhost:4000/posts/Configure-QoS-within-API-Gateway-using-ocelot-and-Polly/</id>
    <content src="http://localhost:4000/posts/Configure-QoS-within-API-Gateway-using-ocelot-and-Polly/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="Web API" />
    
  

  
    <summary>
      





      Introduction
API Gateway is an entry point for backend application. It maintains routing, authentication, logging, service discovery etc. Ocelot is used to design and develop API gateway for .net based application. QoS is generally configured in API gateway which provides different priorities for different applications, users or traffic. In this article, we will configure and discuss Quality of...
    </summary>
  

  </entry>

</feed>


