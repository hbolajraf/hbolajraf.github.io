

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Hassan BOLAJRAF Blog</title>
  <subtitle></subtitle>
  <updated>2024-12-30T11:51:42+01:00</updated>
  <author>
    <name>Hassan BOLAJRAF</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Hassan BOLAJRAF </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Azure | Setting Up a Health Check API with Application Insights in ASP.NET Core and Deploying to Azure</title>
    <link href="http://localhost:4000/posts/Setting-Up-a-Health-Check-API-with-Application-Insights-in-ASP.NET-Core-and-Deploying-to-Azure.html" rel="alternate" type="text/html" title="Azure | Setting Up a Health Check API with Application Insights in ASP.NET Core and Deploying to Azure" />
    <published>2024-12-24T00:00:00+01:00</published>
  
    <updated>2024-12-24T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Setting-Up-a-Health-Check-API-with-Application-Insights-in-ASP.NET-Core-and-Deploying-to-Azure.html</id>
    <content src="http://localhost:4000/posts/Setting-Up-a-Health-Check-API-with-Application-Insights-in-ASP.NET-Core-and-Deploying-to-Azure.html" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="App Insights" />
    
  

  
    <summary>
      





      In this guide, we’ll build a Health Check API in ASP.NET Core, integrate it with Application Insights for logging and monitoring, and then deploy the application to Azure for real-time monitoring. By the end of this post, you’ll have a fully operational health check API, complete with logging and monitoring in the Azure portal.



Step 1: Set Up Application Insights in Azure


  Go to the Azure...
    </summary>
  

  </entry>

  
  <entry>
    <title>Azure | Understanding Cloud Service Models</title>
    <link href="http://localhost:4000/posts/Understanding-Cloud-Service-Models.html" rel="alternate" type="text/html" title="Azure | Understanding Cloud Service Models" />
    <published>2024-11-21T00:00:00+01:00</published>
  
    <updated>2024-11-21T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Understanding-Cloud-Service-Models.html</id>
    <content src="http://localhost:4000/posts/Understanding-Cloud-Service-Models.html" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="Cloud" />
    
  

  
    <summary>
      





      Cloud computing service models can be complex to understand. This post uses a simple pizza-making analogy to explain different cloud service models, followed by technical implementations in Microsoft Azure.

Service Models Explained

Traditional On-Premises (Making Pizza at Home)
In this scenario, you’re responsible for everything:

  Buying and maintaining the kitchen (infrastructure)
  Purcha...
    </summary>
  

  </entry>

  
  <entry>
    <title>Azure | Azure Functions Trigger Types with Use Cases and Examples</title>
    <link href="http://localhost:4000/posts/Azure-Functions-Types-and-C-Examples.html" rel="alternate" type="text/html" title="Azure | Azure Functions Trigger Types with Use Cases and Examples" />
    <published>2024-11-18T00:00:00+01:00</published>
  
    <updated>2024-11-18T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Azure-Functions-Types-and-C-Examples.html</id>
    <content src="http://localhost:4000/posts/Azure-Functions-Types-and-C-Examples.html" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="Azure Functions" />
    
  

  
    <summary>
      





      Azure Functions support various trigger types to execute code in response to various events. Below are the most common trigger types along with their use cases and C# examples.

1. HttpTrigger

Description
HttpTrigger allows functions to be invoked via HTTP requests.

Use Case
You can create an HTTP Trigger Function to process incoming customer orders. When a client sends an HTTP POST request w...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# | Exploring .NET 9's New Developer Features</title>
    <link href="http://localhost:4000/posts/Exploring-DotNET-9-New-Developer-Features.html" rel="alternate" type="text/html" title="C# | Exploring .NET 9&amp;apos;s New Developer Features" />
    <published>2024-10-09T00:00:00+02:00</published>
  
    <updated>2024-10-09T00:00:00+02:00</updated>
  
    <id>http://localhost:4000/posts/Exploring-DotNET-9-New-Developer-Features.html</id>
    <content src="http://localhost:4000/posts/Exploring-DotNET-9-New-Developer-Features.html" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="DotNet" />
    
  

  
    <summary>
      





      .NET 9, the latest release in Microsoft’s development platform, brings significant enhancements to improve developer productivity and code quality. This post explores the key features and syntax improvements that developers can leverage in their projects.

Collection Expressions

One of the most anticipated features in .NET 9 is the introduction of collection expressions, providing a more conci...
    </summary>
  

  </entry>

  
  <entry>
    <title>Kubernetes | Configure Kubernetes Single Node Cluster and Deploy an ASP.NET Core Application Using Docker Hub</title>
    <link href="http://localhost:4000/posts/Configure-Kubernetes-Single-Node-Cluster-and-Deploy-an-ASP.NET-Core-Application-Using-Docker-Hub.html" rel="alternate" type="text/html" title="Kubernetes | Configure Kubernetes Single Node Cluster and Deploy an ASP.NET Core Application Using Docker Hub" />
    <published>2024-10-01T00:00:00+02:00</published>
  
    <updated>2024-10-01T00:00:00+02:00</updated>
  
    <id>http://localhost:4000/posts/Configure-Kubernetes-Single-Node-Cluster-and-Deploy-an-ASP.NET-Core-Application-Using-Docker-Hub.html</id>
    <content src="http://localhost:4000/posts/Configure-Kubernetes-Single-Node-Cluster-and-Deploy-an-ASP.NET-Core-Application-Using-Docker-Hub.html" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Kubernetes" />
    
    <category term="Development" />
    
  

  
    <summary>
      





      
  
    
      
          Note
      
    
    
      
        I highlighted screenshots with a yellow color to focus on some important informations.
      
      
        You can download the C# solution from GitHub
      
    
  


Overview
Kubernetes is a powerful open-source container orchestration tool that simplifies the deployment, 
scaling, and management of containerized applications. ...
    </summary>
  

  </entry>

</feed>


