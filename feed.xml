

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title></title>
  <subtitle></subtitle>
  <updated>2024-03-18T23:18:42+01:00</updated>
  <author>
    <name>Hassan BOLAJRAF</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2024 Hassan BOLAJRAF </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>HashiCorp | Vault Multiple Choice Training Exam</title>
    <link href="http://localhost:4000/posts/Vault-Multiple-Choice-Training-Exam/" rel="alternate" type="text/html" title="HashiCorp | Vault Multiple Choice Training Exam" />
    <published>2024-03-18T00:00:00+01:00</published>
  
    <updated>2024-03-18T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Vault-Multiple-Choice-Training-Exam/</id>
    <content src="http://localhost:4000/posts/Vault-Multiple-Choice-Training-Exam/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="HashiCorp" />
    
    <category term="Vault" />
    
  

  
    <summary>
      





      The Vault Associate 002 exam contains 10 sections. Below, you’ll find some recurring questions that can help you prepare for the exam.

Multiple Choice Exam

Module 1: Compare Authentication Methods


  What is a primary purpose of authentication methods in Vault?
    
      To manage secrets
      To revoke leases
      To encrypt data
      To verify and authorize users
    
  
  Which authen...
    </summary>
  

  </entry>

  
  <entry>
    <title>Azure | Azure CLI Introduction and Usage</title>
    <link href="http://localhost:4000/posts/azure-cli/" rel="alternate" type="text/html" title="Azure | Azure CLI Introduction and Usage" />
    <published>2024-03-09T00:00:00+01:00</published>
  
    <updated>2024-03-09T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/azure-cli/</id>
    <content src="http://localhost:4000/posts/azure-cli/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="CLI" />
    
  

  
    <summary>
      





      Azure CLI (Command-Line Interface) is a powerful tool for managing Azure resources from the command line. It provides a set of commands for interacting with Azure services and resources, allowing users to automate tasks, deploy resources, and manage infrastructure efficiently. In this guide, we’ll explore the basics of Azure CLI and how to use it with detailed examples.

Installation

Before us...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# | Types of Classes</title>
    <link href="http://localhost:4000/posts/Types-of-Classes-in-C/" rel="alternate" type="text/html" title="C# | Types of Classes" />
    <published>2024-03-05T00:00:00+01:00</published>
  
    <updated>2024-03-05T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Types-of-Classes-in-C/</id>
    <content src="http://localhost:4000/posts/Types-of-Classes-in-C/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="Development" />
    
  

  
    <summary>
      





      In C#, classes are the building blocks of object-oriented programming. They encapsulate data for the object and define methods to manipulate that data. There are various types of classes in C#, each serving different purposes. Let’s explore them with detailed examples.

1. Regular Classes

Regular classes are the most common type of classes in C#. They are used to define objects and their behav...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# | Implementing Event Driven Microservices Architecture</title>
    <link href="http://localhost:4000/posts/Implementing-Event-Driven-Microservices-Architecture-in-.NET/" rel="alternate" type="text/html" title="C# | Implementing Event Driven Microservices Architecture" />
    <published>2024-03-02T00:00:00+01:00</published>
  
    <updated>2024-03-02T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Implementing-Event-Driven-Microservices-Architecture-in-.NET/</id>
    <content src="http://localhost:4000/posts/Implementing-Event-Driven-Microservices-Architecture-in-.NET/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="Development" />
    
  

  
    <summary>
      





      In this guide, we’ll explore how to implement an event-driven microservices architecture using .NET technologies, specifically focusing on C# examples. Event-driven architecture (EDA) offers numerous benefits such as scalability, loose coupling, and resilience, making it a popular choice for building modern distributed systems. We’ll cover the key concepts and demonstrate how to design and impl...
    </summary>
  

  </entry>

  
  <entry>
    <title>Azure | Infrastructure as Code with ARM Template and Terraform</title>
    <link href="http://localhost:4000/posts/Iac/" rel="alternate" type="text/html" title="Azure | Infrastructure as Code with ARM Template and Terraform" />
    <published>2024-02-29T00:00:00+01:00</published>
  
    <updated>2024-02-29T00:00:00+01:00</updated>
  
    <id>http://localhost:4000/posts/Iac/</id>
    <content src="http://localhost:4000/posts/Iac/" />
    <author>
      <name>Hassan BOLAJRAF</name>
    </author>

  
    
    <category term="Azure" />
    
    <category term="Infrastructure as Code" />
    
  

  
    <summary>
      





      In modern cloud computing environments, Infrastructure as Code (IaC) has become a cornerstone for managing and provisioning resources efficiently. Two popular tools for implementing IaC are Azure Resource Manager (ARM) Templates and Terraform. Below, we’ll explore both with detailed examples.

Azure Resource Manager (ARM) Template

ARM Templates are JSON files used to define the infrastructure ...
    </summary>
  

  </entry>

</feed>


